//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.1
//     from Packages/com.yvr.interaction/YVR Input Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

namespace YVR.Interaction.Runtime
{
    public partial class @YVRInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @YVRInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""YVR Input Actions"",
    ""maps"": [
        {
            ""name"": ""YVR Head"",
            ""id"": ""09ff3ccc-21b4-4346-a3a2-7c978b5af892"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""1a9029f8-7a46-46b9-9eff-e9ae8365f611"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""aed87fe6-2b01-4dd2-a8fa-195578fd8158"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""6bb4e248-e42b-47c3-b66c-79566508ca74"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""08654a17-c094-4bbd-8946-415ae4ce2406"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Position"",
                    ""type"": ""Value"",
                    ""id"": ""dde820a2-0462-4756-be47-630b5b56c115"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""8ac32629-4403-4068-aae5-2cd243e230c2"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""ea26ba43-844b-4585-817a-2f124b571813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""73053154-2fbc-4d78-9cac-000282b64f79"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cff1f981-6e1f-4e2c-a90c-715a0ea2e80e"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d22c160-9642-4784-bed3-f108d9099185"",
                    ""path"": ""<HandheldARInputDevice>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2017383-a3f6-4c46-acb1-012b8eece9cc"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30a88e64-475a-4a1c-aca0-80b6a2bc3327"",
                    ""path"": ""<HandheldARInputDevice>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""fd9bd2d1-a464-4069-bf55-7f7a3cdb5a96"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""ef9a3bee-0af0-4688-81d3-49c2d9be0def"",
                    ""path"": ""<EyeGaze>/pose/rotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""aaf13e7c-a814-4c6e-9349-042da0cb27e9"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3e829ba4-2fad-45ea-8114-7670f0e484be"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""0cf0b092-6006-474b-9cf5-dc4039450f39"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""872dc9a3-bab9-4b3f-9f84-8d12371f1f67"",
                    ""path"": ""<EyeGaze>/pose/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2f870b88-8825-4a62-b02e-b5a523723446"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""eaececb1-b4a3-4b47-83c2-60562a364085"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Integer Fallback"",
                    ""id"": ""1a6685cf-ae82-4f22-a967-75610a8e71ed"",
                    ""path"": ""IntegerFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""0dc9d652-871d-4ba5-94a1-50cf8218009a"",
                    ""path"": ""<EyeGaze>/pose/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""9bbd034f-9254-4dd5-9df7-d84f53b0bc8d"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""d5e35a2f-03c4-432a-8e5e-d200278bf0a9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""43a7b1a1-e99a-4346-a058-5b68c535729d"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15eff92f-dac7-4e6e-986c-08b3f1e73fac"",
                    ""path"": ""<XRHMD>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Button Fallback"",
                    ""id"": ""c262df21-2ffb-4295-93cc-8fdb5649da7e"",
                    ""path"": ""ButtonFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""f77492f8-09ee-49d0-b821-7c31cb5c2a16"",
                    ""path"": ""<EyeGaze>/pose/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""960252ae-88e8-427a-ac9f-ecac6fb3c7d1"",
                    ""path"": ""<XRHMD>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""dfc94c22-a115-471f-9f17-8cb6bc7f6637"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Controller;HandTracking"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""YVR Left"",
            ""id"": ""5fe596f9-1b7b-49b7-80a7-3b5195caf74d"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""83a7af0b-87e3-42c3-a909-95fbf8091e4f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""cb6b7130-2bac-4ef7-abe4-6991ae7d419d"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""82eb6741-beef-48d3-83ab-a957dc1caa1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""d20fc51c-7916-43a7-8b03-706049966aea"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""664a62b0-e178-421d-b3f8-014eec01591d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim Position"",
                    ""type"": ""Value"",
                    ""id"": ""c73a0160-3d9b-4dde-96f9-6a390e68778c"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""f208faac-e869-4280-ac9c-9b3d0ab819bb"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Flags"",
                    ""type"": ""Value"",
                    ""id"": ""f98e71db-49b4-4882-8991-a0e386733e87"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pinch Position"",
                    ""type"": ""Value"",
                    ""id"": ""cac52a91-5970-4ad2-8c86-a8c0e91a1837"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Position"",
                    ""type"": ""Value"",
                    ""id"": ""4c557d81-3795-4355-a83e-6f886221d011"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""0565b7f7-f841-4395-98df-a77f4dd6d9c9"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Position"",
                    ""type"": ""Value"",
                    ""id"": ""e1240870-ef45-4f3e-8110-ff1b9049c4ca"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""41873a55-b316-4dbe-96e6-93477eef5e47"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AnyClick"",
                    ""type"": ""Button"",
                    ""id"": ""97a92f16-3c73-44a6-8e64-c21554d57759"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTouch"",
                    ""type"": ""Button"",
                    ""id"": ""c02225bf-3a8a-48aa-b18a-29169cb9c6bd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""793106a9-5c47-4ac0-85dd-3c225387c8c6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""4b749960-8e67-418a-a3a1-2c1854fb1378"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""41dfb49f-8e58-4510-bd26-59872fbb54f6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerValue"",
                    ""type"": ""Value"",
                    ""id"": ""9f32d14f-f2fb-49b9-a4ea-a982886cad4c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""2302b261-aaa8-4537-af88-27954b61f046"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripValue"",
                    ""type"": ""Value"",
                    ""id"": ""8002c835-e048-416d-a10d-d45a4067bb2d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Meun"",
                    ""type"": ""Button"",
                    ""id"": ""3fd3a68c-bf2e-44a5-9bcd-24f00807ff36"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStick"",
                    ""type"": ""Value"",
                    ""id"": ""2eb2b9f2-fd35-43a3-9e6d-e36d0d502cc3"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickClick"",
                    ""type"": ""Button"",
                    ""id"": ""268ccbf0-1b0c-452b-b71e-e346d441c66e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickUp"",
                    ""type"": ""Button"",
                    ""id"": ""b00cb718-1114-4b71-a3ff-372d4a55f5ca"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickDown"",
                    ""type"": ""Button"",
                    ""id"": ""55c34097-d7d7-4418-b953-9e4ebd3370af"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""19fd0715-82cc-42b9-bcf2-fe3bf930cdd0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickRight"",
                    ""type"": ""Button"",
                    ""id"": ""a2ec64a0-c321-4e6c-b830-3cc1fb66e0c9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""IndexPressed"",
                    ""type"": ""Button"",
                    ""id"": ""1f0b6757-8704-4518-b614-28dd513ef174"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndexPressValue"",
                    ""type"": ""Value"",
                    ""id"": ""f58b153e-2dc5-4a07-97f6-d4c034f175d6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""61466a56-4ee4-47b1-aa6a-4806de1de5f2"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""afdcfbff-e241-4fdd-a6d1-23b0bf273360"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""ed03d944-4c09-4c38-8b68-5c844e18ca7c"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""c98fc8c8-7fc6-4909-89b6-c5b7568e7275"",
                    ""path"": ""<XRHandDevice>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""14aeff85-d719-43ff-a124-b1cd7ca8686d"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""abf752ec-feee-4d51-b530-f0870f48acc9"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""6580b669-0651-401c-9779-85ef22689130"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""ae101942-9eaa-4c53-a388-cafc3fd89bdf"",
                    ""path"": ""<XRHandDevice>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acdf9550-5529-4ff7-8558-73ecdf0d75bd"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97a0351f-659b-482a-8fa0-19015ccd055e"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34454fec-7610-497a-b1a5-d3d5f01b312c"",
                    ""path"": ""<XRHandDevice>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28df8d2f-b563-4377-bd11-6c8932ee591c"",
                    ""path"": ""<MetaAimHand>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e4b9d13-5502-4a87-80af-daeb73d5d983"",
                    ""path"": ""<YVRAimHand>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2623b909-75bd-40da-97bd-ae1ecfb0a89b"",
                    ""path"": ""<MetaAimHand>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73c20739-666f-43c6-aac4-b3d4b7667147"",
                    ""path"": ""<YVRAimHand>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7a37505-52bd-4a96-8f88-c761a62a71e7"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pinchPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Pinch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""017a01a2-6e1a-4b39-9b5e-e115d5d2dd6a"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pokePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Poke Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ab4651e-837c-4352-9055-6671517f1917"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pokeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Poke Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1de7b81-80d1-4207-8f19-4fb96a537bb3"",
                    ""path"": ""<XRController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9f33fe3-b3bf-48c1-a8bc-dd6a4ddfba94"",
                    ""path"": ""<XRHandDevice>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""286f44f6-74a5-4f92-8468-42445c7a3cb8"",
                    ""path"": ""<MetaAimHand>{LeftHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f378c40-e949-4e8f-b1a6-68bf2ba13828"",
                    ""path"": ""<YVRAimHand>{LeftHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21a4b6f9-1ebe-434f-b572-066a77b04c48"",
                    ""path"": ""<XRHandDevice>{LeftHand}/gripPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Grip Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c1f9e74-aba4-41d6-b519-90ed563be5d7"",
                    ""path"": ""<XRHandDevice>{LeftHand}/gripRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Grip Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38d88f3d-4ddc-4098-b4a5-0c62a8d19e76"",
                    ""path"": ""<XRController>{LeftHand}/*Button"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a73e9256-774e-4e5a-b5af-58a2917b0539"",
                    ""path"": ""<XRController>{LeftHand}/*Pressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fed1f19a-9121-4455-9c26-d4655833b387"",
                    ""path"": ""<XRController>{LeftHand}/*Touch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82778206-13c5-4514-8743-924f5edfe913"",
                    ""path"": ""<XRController>{RightHand}/*Touched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d728c5bd-3489-4ed8-bdb4-41302048e7ab"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b34ead58-3eb3-47b8-a1a0-3fa4187d7697"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cb9ea45-7122-4325-b629-e4b445b87106"",
                    ""path"": ""<YVRController>{LeftHand}/thumbstick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34532658-f6df-4091-9ea8-55e02b139d2d"",
                    ""path"": ""<YVRController>{LeftHand}/thumbstick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2f9ada3-2082-43be-9a74-198ab398870e"",
                    ""path"": ""<YVRController>{LeftHand}/thumbstick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a6603b4-045b-4b2c-b8aa-2d2b156c337b"",
                    ""path"": ""<YVRController>{LeftHand}/thumbstick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e1d88f5-7283-4a25-8756-74cd2da69a36"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad0d8571-55c7-4899-a543-6f418bc30076"",
                    ""path"": ""<XRController>{LeftHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7356fb1a-d6d7-42d9-8b77-9895cc776981"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83298768-7964-4aff-91e7-d7e854773d84"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ea2beea-eaca-4200-8983-8edd58060b8a"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76de6f49-d842-45de-8f2e-c40ad5d73cb6"",
                    ""path"": ""<XRController>{LeftHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdca9c75-7a16-44af-b569-1bee5086b54a"",
                    ""path"": ""<XRController>{LeftHand}/{MenuButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Meun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3480a2b2-69f5-4896-bf8b-848fd071fe06"",
                    ""path"": ""<YVRAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndexPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f219354d-8e91-4b9f-8aba-7e7de8659e81"",
                    ""path"": ""<YVRAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndexPressValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""YVR Left Interaction"",
            ""id"": ""7a5e7537-cc30-4eb1-a544-6946baa8f3eb"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""33754c03-48ec-46ef-9bc6-22ed6bfdd8e8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""e6005f29-e4c1-4f3b-8bf7-3a28bab5ca9c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""0c0991c5-d329-4afc-8892-1076b440477c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""0c3d0ec9-85a1-45b3-839b-1ca43f859ecd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""7e1eced7-c774-4fe5-be8f-d8711f646d9e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""f241c1aa-1050-4338-b2bf-a4a47776693d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""a5372626-7022-4ba7-b152-6f26318fd8a8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""bfa204c7-3c92-4193-bad1-39eb71920042"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""21b75b25-12ad-410f-b4f8-a7745b7aca27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Directional Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""93bd97c5-fd23-4853-8045-1b12324aa24e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scale Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""80ed7d74-56de-473c-bf76-da3bdd16b562"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scale Over Time"",
                    ""type"": ""Value"",
                    ""id"": ""2257500c-1efb-4f69-a54d-ed5db2708616"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""71a4d23f-3e9a-4513-923b-ba388c5e84bf"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcb675ca-050f-4b51-b8c1-b5e233dd578c"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73325635-d9e5-481a-9279-ae7be089422d"",
                    ""path"": ""<MetaAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeee0d9d-4ed0-46df-9fa0-772ff9eafcc6"",
                    ""path"": ""<YVRAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49a23327-a116-48c0-8af9-0d2c50c15a88"",
                    ""path"": ""<XRController>{LeftHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""304be843-4b23-45d9-89fa-005ac163d9b9"",
                    ""path"": ""<MetaAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c776cf2-4112-4318-becd-cff874a001e2"",
                    ""path"": ""<YVRAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""487f4f2e-9e9b-49aa-b0f2-4037a24624f5"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b8b1b59-2fdc-4998-8259-50341075d9a2"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b34c79c1-ab5e-4851-87ac-abc43705eae0"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5bf6a12-a026-46d1-a793-7252c49aaf66"",
                    ""path"": ""<MetaAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e36eedd6-0ff4-49c7-a641-01d15466e885"",
                    ""path"": ""<YVRAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71d94579-1bf4-4034-ab9e-e7166842128f"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d250c9be-4bf2-4b5c-8962-4fcf5d53bdb3"",
                    ""path"": ""<MetaAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15ea6807-37a5-4370-852b-5e866cf7e77a"",
                    ""path"": ""<YVRAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ed313a6-c966-4669-8a62-4bb2319d485b"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotate Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b30ca4b-9f98-4a44-9af5-a89412d5cdc8"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f872fc5-75dc-49e5-9bbd-f2e4d4498c65"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Scale Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b21d690b-51fc-413f-a887-08a2a39af3fc"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Scale Over Time"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fe0ed53-b4d3-4cd8-b567-397a7d1e1c6a"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Directional Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""370f21e3-a80b-4b07-990b-299c2da0929a"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Translate Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""YVR Right"",
            ""id"": ""7960f8ef-2bf3-4281-aecc-4c03809d6c8c"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""c4990d70-7b8a-4ce1-b03c-da86716b8352"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""ee6bf5bf-bb0a-4a50-8327-cb654b19e298"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""a705ffe4-b2c8-4b78-847f-25257d4e30af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""167ea203-5bfb-4d74-bde9-8026b7483102"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""57b2a1b4-3290-46d6-ac07-4854ee8f91b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim Position"",
                    ""type"": ""Value"",
                    ""id"": ""daf49d5d-4ba8-4bf7-9010-e7cae2096907"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""148c182f-63ef-4709-8057-f6ea8070cb5c"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Flags"",
                    ""type"": ""Value"",
                    ""id"": ""93a75a21-033e-440c-9954-ff264afb2db9"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pinch Position"",
                    ""type"": ""Value"",
                    ""id"": ""7a2e5dcd-3e49-4622-90ea-6607994f2be0"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Position"",
                    ""type"": ""Value"",
                    ""id"": ""496d56bd-afd7-495b-a326-16e4ef742bc1"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""3767652c-5427-421b-8f8d-660106453cb1"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Position"",
                    ""type"": ""Value"",
                    ""id"": ""defe4495-ba8f-4958-b2fb-98d889e45ac5"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""6bc56065-b0db-4265-8cef-5c7d4f40128a"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AnyClick"",
                    ""type"": ""Button"",
                    ""id"": ""d76e0e36-ae06-4d5a-8758-50e0c07b7260"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTouch"",
                    ""type"": ""Button"",
                    ""id"": ""b69792f0-3804-4456-8053-b627ba0cb210"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""856edab0-6e2d-4ae8-bc71-a03b3e4fe12c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""79349b45-8f46-444b-b58b-ac48f7d863f8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""63ca6a2b-b29d-4b42-b4d7-998d9c741d1b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerValue"",
                    ""type"": ""Value"",
                    ""id"": ""bbd5ce41-7437-4a90-af05-e8b4bd432f93"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""62979ab8-fe08-416c-9579-62ff8cf9b698"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripValue"",
                    ""type"": ""Value"",
                    ""id"": ""c687a455-72af-4b25-91ed-cf90ec5e2216"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Meun"",
                    ""type"": ""Button"",
                    ""id"": ""71d2cd3e-f7f9-4b87-bae8-f5e1eb0326c5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStick"",
                    ""type"": ""Value"",
                    ""id"": ""3aefc0bd-00a1-4453-9ea0-9fa6856658ce"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickClick"",
                    ""type"": ""Button"",
                    ""id"": ""c46f64a6-e13b-49cd-a747-9d80c813640b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickUp"",
                    ""type"": ""Button"",
                    ""id"": ""2845c0e4-b5df-4ee0-b2d3-dffd57aadb49"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickDown"",
                    ""type"": ""Button"",
                    ""id"": ""02e6ce47-ba51-4f1c-9a78-f48bd5258cce"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""75a57041-5fd8-42d7-9fe7-0a14da5d83e4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickRight"",
                    ""type"": ""Button"",
                    ""id"": ""b9da5bfc-7c51-4520-92ff-f00fb6f3ccc1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""IndexPressed"",
                    ""type"": ""Button"",
                    ""id"": ""4d338c32-81a4-4e14-9724-af9db2bc66ea"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndexPressValue"",
                    ""type"": ""Value"",
                    ""id"": ""0b274378-2928-4299-8b2c-5cf67e6ae652"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""84e51e1c-1b95-4f3e-a61f-29da6c1f0816"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""3722d501-eb80-4f61-9361-08a5ea7a1394"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2e6ad191-d5aa-4919-aac6-295c83387a72"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""b9ecb60d-341e-47cf-b50a-41d5815af8b0"",
                    ""path"": ""<XRHandDevice>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""74e968f1-ad08-4a82-a68d-764517faecef"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""9717e367-64a4-440a-9974-1e641d753eb2"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0794a41d-29ef-48ec-a452-6b7de29b52fa"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3ef0a781-60c5-48bc-a584-f95553f8ae0a"",
                    ""path"": ""<XRHandDevice>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6011e1e6-b2dd-4cb1-8da5-29b03868f2c5"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ccbaec-eeca-4fc4-8281-ee1758b4eb9b"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""714d1173-f908-4bca-951c-4adb4eb7b4c5"",
                    ""path"": ""<XRHandDevice>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd822fc8-c655-4a4d-87d0-9575760b6dca"",
                    ""path"": ""<MetaAimHand>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59388271-4bbd-4d9d-8fc7-45bc4d5c36be"",
                    ""path"": ""<YVRAimHand>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bb1158a-2d78-446b-9351-6f9b3f1364cb"",
                    ""path"": ""<MetaAimHand>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a41caa2c-2424-4163-a3d3-874e4d1fca7f"",
                    ""path"": ""<YVRAimHand>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21413a94-0048-4112-b433-a770f183f592"",
                    ""path"": ""<XRHandDevice>{RightHand}/pinchPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Pinch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e847fad-7431-4e48-883a-d489fca4ce0d"",
                    ""path"": ""<XRHandDevice>{RightHand}/pokePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Poke Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99b19b88-e2ad-4670-91ee-1f55f6c34a69"",
                    ""path"": ""<XRHandDevice>{RightHand}/pokeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Poke Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1de48aee-890b-4dbb-a02d-51df9bd39db7"",
                    ""path"": ""<XRController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a0c4fe0-639a-44e0-beeb-4e11e0dea7ef"",
                    ""path"": ""<XRHandDevice>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5469d4d1-9645-4397-a596-d74f876eafc2"",
                    ""path"": ""<MetaAimHand>{RightHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5572355-bf4a-451c-8da6-15220932cf90"",
                    ""path"": ""<YVRAimHand>{RightHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efcaf94e-8faa-439e-983b-c65f79c3b743"",
                    ""path"": ""<XRHandDevice>{RightHand}/gripPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Grip Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70a747b6-46e8-4d3b-aaec-20bcab8f1dd7"",
                    ""path"": ""<XRHandDevice>{RightHand}/gripRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Grip Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f904373-dc43-43f2-a680-f9bfa8953440"",
                    ""path"": ""<XRController>{RightHand}/*Button"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb2db43f-bc37-48d9-9fed-b5c45e93e1ff"",
                    ""path"": ""<XRController>{RightHand}/*Pressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91d28450-2c12-459a-bc7d-c7ce27473b3a"",
                    ""path"": ""<XRController>{RightHand}/*Touched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e1cc7ac-3adf-4fdf-988f-a7e34ceb1af3"",
                    ""path"": ""<XRController>{RightHand}/*Touch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AnyTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f82d9eb2-eccd-4d2f-8fac-0cc2f2dd8238"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb8f85eb-bf79-47c2-b389-cd4d87e8ad88"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d00203f9-408b-4a50-920c-444ae79f6a48"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c5910b1-5b0e-47ac-91dc-ce0707f822e6"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0612a06c-ac8d-4cad-a2ac-afe41ee6917e"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0c038a3-d49c-4e91-806d-f2f11a873998"",
                    ""path"": ""<XRController>{RightHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d01f2317-e33f-4ca3-9f49-053cd0f02051"",
                    ""path"": ""<XRController>{RightHand}/{MenuButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Meun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be1f5ee0-8d72-44e2-ba60-0e30855a2c71"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a89fbf97-fd71-41ab-ae2e-9b62d124c1c5"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d7b992b-96ee-47ce-b5cd-3b4e0ed46432"",
                    ""path"": ""<YVRController>{RightHand}/thumbstick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d680b0b-6be6-4050-b309-2c2e0f7395ea"",
                    ""path"": ""<YVRController>{RightHand}/thumbstick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acd2cb28-5ece-484b-a3d1-f149ddfccc98"",
                    ""path"": ""<YVRController>{RightHand}/thumbstick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""384e2787-405c-441c-a2bd-85e2a5e5fdb7"",
                    ""path"": ""<YVRController>{RightHand}/thumbstick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76314f5e-1060-4d86-8135-344535b8eb36"",
                    ""path"": ""<YVRAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";HandTracking"",
                    ""action"": ""IndexPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f119a36-2635-48f4-a4d7-7500ec623ea2"",
                    ""path"": ""<YVRAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";HandTracking"",
                    ""action"": ""IndexPressValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""YVR Right Interaction"",
            ""id"": ""461bce25-7762-40c5-b639-f190649be6d6"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""ac96c10b-c955-4a46-8e67-bf16bc069b53"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""39bbf1ac-21a3-413d-90f6-6dbf6efeaabe"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""41976d89-60de-4deb-bff9-16b4af96b290"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""c3ca6ed7-3d25-44a2-b1d8-5be4eb699370"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""65174b45-c2ee-4f90-93bb-fb4084eaaab3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""962ac033-ec42-4981-88a4-551ad9be6ecb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""c283b939-751f-426e-8462-142a529993e3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""6f7cf253-7062-443b-b10f-2be48a33f027"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""9b5d8312-f609-4895-b70f-81a722b2ae11"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Directional Manipulation"",
                    ""type"": ""Value"",
                    ""id"": ""b950a329-6492-4e29-b563-afc726f81e95"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scale Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""5ad73d15-99a4-4bce-a76f-f49815602416"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scale Over Time"",
                    ""type"": ""Value"",
                    ""id"": ""19a21f59-bd21-4f77-b29d-4fda26ef6769"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1ce80054-410d-4112-a332-50faa7fb4f23"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2f0e6e4-ba0d-4003-99ab-e63927c9d6e4"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d5b47ea-64e3-4b99-b620-de6c360908be"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ff847d0-3482-45b6-b440-e51a6645f998"",
                    ""path"": ""<YVRAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd433817-216c-46b9-8dd3-f3a4ea1767b9"",
                    ""path"": ""<XRController>{RightHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""770a07b5-a199-4342-b4a5-b3baafbe2bcb"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11329f88-416d-44fc-99c2-765af56c1539"",
                    ""path"": ""<YVRAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa59aed1-ae0b-4074-a58c-294b85f46228"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""150f414f-61bf-47b1-b4f8-f772a2a40565"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92bb5b8f-bf48-4dab-af05-50a865773895"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1652c26e-d835-461f-b46b-55b146fd9bba"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fc20c36-d7d6-42d9-9fcc-95e42e07a571"",
                    ""path"": ""<YVRAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b4ef08d-9ddd-4f0a-8539-d1114d14d143"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""620cd3c3-a8c2-4a24-825a-ef6eb1cb41ef"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83ef894f-1f45-4969-b5de-7157e00d1029"",
                    ""path"": ""<YVRAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""HandTracking"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c0fa06c-b670-477f-a95d-eb3b4880e439"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotate Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af6fd279-2f48-4f51-8e9d-29b0b9d926f8"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8258e49-f7cc-44d7-bc27-77c2161e2005"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Scale Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef10c39a-2987-41bb-bb80-0e476240adaa"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Scale Over Time"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4b46d7d-8231-4672-83f9-75af565faf57"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Directional Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4caf4e8d-13e5-4bd6-8f42-b6b99c315ad0"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""Translate Manipulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""YVR Eye"",
            ""id"": ""1c68bd18-beb5-4548-b789-66f4c9303927"",
            ""actions"": [
                {
                    ""name"": ""devicePosition"",
                    ""type"": ""Value"",
                    ""id"": ""1e0bc715-142b-4dbb-b913-2bfd213acd96"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""deviceRotation"",
                    ""type"": ""Value"",
                    ""id"": ""cf3d75d3-12e6-40ee-9a0e-c3b3612f48bd"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""isTracked"",
                    ""type"": ""Button"",
                    ""id"": ""9ef7d98f-a095-424d-b5a9-258faf0cc66f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EyePress"",
                    ""type"": ""Button"",
                    ""id"": ""239f786c-c4ef-414c-9668-36d32b42b6d1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""654f7f91-f877-4f13-b426-b0577185ef90"",
                    ""path"": ""<YVREyeDevice>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""devicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf62b816-9dbd-4f36-874b-2f13c4a3ad9a"",
                    ""path"": ""<YVREyeDevice>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""deviceRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57ce2776-55d1-43bb-a5bf-e5e1fdfbc7a0"",
                    ""path"": ""<YVREyeDevice>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""isTracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39289d9f-c897-4efd-8cde-7c99898edf9f"",
                    ""path"": ""<YVRAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EyePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4b09df9-6b0f-4138-956b-4ddab093c04d"",
                    ""path"": ""<YVRAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EyePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""HandTracking"",
            ""bindingGroup"": ""HandTracking"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRHandDevice>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // YVR Head
            m_YVRHead = asset.FindActionMap("YVR Head", throwIfNotFound: true);
            m_YVRHead_Position = m_YVRHead.FindAction("Position", throwIfNotFound: true);
            m_YVRHead_Rotation = m_YVRHead.FindAction("Rotation", throwIfNotFound: true);
            m_YVRHead_IsTracked = m_YVRHead.FindAction("Is Tracked", throwIfNotFound: true);
            m_YVRHead_TrackingState = m_YVRHead.FindAction("Tracking State", throwIfNotFound: true);
            m_YVRHead_EyeGazePosition = m_YVRHead.FindAction("Eye Gaze Position", throwIfNotFound: true);
            m_YVRHead_EyeGazeRotation = m_YVRHead.FindAction("Eye Gaze Rotation", throwIfNotFound: true);
            m_YVRHead_EyeGazeIsTracked = m_YVRHead.FindAction("Eye Gaze Is Tracked", throwIfNotFound: true);
            m_YVRHead_EyeGazeTrackingState = m_YVRHead.FindAction("Eye Gaze Tracking State", throwIfNotFound: true);
            // YVR Left
            m_YVRLeft = asset.FindActionMap("YVR Left", throwIfNotFound: true);
            m_YVRLeft_Position = m_YVRLeft.FindAction("Position", throwIfNotFound: true);
            m_YVRLeft_Rotation = m_YVRLeft.FindAction("Rotation", throwIfNotFound: true);
            m_YVRLeft_IsTracked = m_YVRLeft.FindAction("Is Tracked", throwIfNotFound: true);
            m_YVRLeft_TrackingState = m_YVRLeft.FindAction("Tracking State", throwIfNotFound: true);
            m_YVRLeft_HapticDevice = m_YVRLeft.FindAction("Haptic Device", throwIfNotFound: true);
            m_YVRLeft_AimPosition = m_YVRLeft.FindAction("Aim Position", throwIfNotFound: true);
            m_YVRLeft_AimRotation = m_YVRLeft.FindAction("Aim Rotation", throwIfNotFound: true);
            m_YVRLeft_AimFlags = m_YVRLeft.FindAction("Aim Flags", throwIfNotFound: true);
            m_YVRLeft_PinchPosition = m_YVRLeft.FindAction("Pinch Position", throwIfNotFound: true);
            m_YVRLeft_PokePosition = m_YVRLeft.FindAction("Poke Position", throwIfNotFound: true);
            m_YVRLeft_PokeRotation = m_YVRLeft.FindAction("Poke Rotation", throwIfNotFound: true);
            m_YVRLeft_GripPosition = m_YVRLeft.FindAction("Grip Position", throwIfNotFound: true);
            m_YVRLeft_GripRotation = m_YVRLeft.FindAction("Grip Rotation", throwIfNotFound: true);
            m_YVRLeft_AnyClick = m_YVRLeft.FindAction("AnyClick", throwIfNotFound: true);
            m_YVRLeft_AnyTouch = m_YVRLeft.FindAction("AnyTouch", throwIfNotFound: true);
            m_YVRLeft_PrimaryButton = m_YVRLeft.FindAction("PrimaryButton", throwIfNotFound: true);
            m_YVRLeft_SecondaryButton = m_YVRLeft.FindAction("SecondaryButton", throwIfNotFound: true);
            m_YVRLeft_Trigger = m_YVRLeft.FindAction("Trigger", throwIfNotFound: true);
            m_YVRLeft_TriggerValue = m_YVRLeft.FindAction("TriggerValue", throwIfNotFound: true);
            m_YVRLeft_Grip = m_YVRLeft.FindAction("Grip", throwIfNotFound: true);
            m_YVRLeft_GripValue = m_YVRLeft.FindAction("GripValue", throwIfNotFound: true);
            m_YVRLeft_Meun = m_YVRLeft.FindAction("Meun", throwIfNotFound: true);
            m_YVRLeft_ThumbStick = m_YVRLeft.FindAction("ThumbStick", throwIfNotFound: true);
            m_YVRLeft_ThumbStickClick = m_YVRLeft.FindAction("ThumbStickClick", throwIfNotFound: true);
            m_YVRLeft_ThumbStickUp = m_YVRLeft.FindAction("ThumbStickUp", throwIfNotFound: true);
            m_YVRLeft_ThumbStickDown = m_YVRLeft.FindAction("ThumbStickDown", throwIfNotFound: true);
            m_YVRLeft_ThumbStickLeft = m_YVRLeft.FindAction("ThumbStickLeft", throwIfNotFound: true);
            m_YVRLeft_ThumbStickRight = m_YVRLeft.FindAction("ThumbStickRight", throwIfNotFound: true);
            m_YVRLeft_IndexPressed = m_YVRLeft.FindAction("IndexPressed", throwIfNotFound: true);
            m_YVRLeft_IndexPressValue = m_YVRLeft.FindAction("IndexPressValue", throwIfNotFound: true);
            // YVR Left Interaction
            m_YVRLeftInteraction = asset.FindActionMap("YVR Left Interaction", throwIfNotFound: true);
            m_YVRLeftInteraction_Select = m_YVRLeftInteraction.FindAction("Select", throwIfNotFound: true);
            m_YVRLeftInteraction_SelectValue = m_YVRLeftInteraction.FindAction("Select Value", throwIfNotFound: true);
            m_YVRLeftInteraction_Activate = m_YVRLeftInteraction.FindAction("Activate", throwIfNotFound: true);
            m_YVRLeftInteraction_ActivateValue = m_YVRLeftInteraction.FindAction("Activate Value", throwIfNotFound: true);
            m_YVRLeftInteraction_UIPress = m_YVRLeftInteraction.FindAction("UI Press", throwIfNotFound: true);
            m_YVRLeftInteraction_UIPressValue = m_YVRLeftInteraction.FindAction("UI Press Value", throwIfNotFound: true);
            m_YVRLeftInteraction_UIScroll = m_YVRLeftInteraction.FindAction("UI Scroll", throwIfNotFound: true);
            m_YVRLeftInteraction_TranslateManipulation = m_YVRLeftInteraction.FindAction("Translate Manipulation", throwIfNotFound: true);
            m_YVRLeftInteraction_RotateManipulation = m_YVRLeftInteraction.FindAction("Rotate Manipulation", throwIfNotFound: true);
            m_YVRLeftInteraction_DirectionalManipulation = m_YVRLeftInteraction.FindAction("Directional Manipulation", throwIfNotFound: true);
            m_YVRLeftInteraction_ScaleToggle = m_YVRLeftInteraction.FindAction("Scale Toggle", throwIfNotFound: true);
            m_YVRLeftInteraction_ScaleOverTime = m_YVRLeftInteraction.FindAction("Scale Over Time", throwIfNotFound: true);
            // YVR Right
            m_YVRRight = asset.FindActionMap("YVR Right", throwIfNotFound: true);
            m_YVRRight_Position = m_YVRRight.FindAction("Position", throwIfNotFound: true);
            m_YVRRight_Rotation = m_YVRRight.FindAction("Rotation", throwIfNotFound: true);
            m_YVRRight_IsTracked = m_YVRRight.FindAction("Is Tracked", throwIfNotFound: true);
            m_YVRRight_TrackingState = m_YVRRight.FindAction("Tracking State", throwIfNotFound: true);
            m_YVRRight_HapticDevice = m_YVRRight.FindAction("Haptic Device", throwIfNotFound: true);
            m_YVRRight_AimPosition = m_YVRRight.FindAction("Aim Position", throwIfNotFound: true);
            m_YVRRight_AimRotation = m_YVRRight.FindAction("Aim Rotation", throwIfNotFound: true);
            m_YVRRight_AimFlags = m_YVRRight.FindAction("Aim Flags", throwIfNotFound: true);
            m_YVRRight_PinchPosition = m_YVRRight.FindAction("Pinch Position", throwIfNotFound: true);
            m_YVRRight_PokePosition = m_YVRRight.FindAction("Poke Position", throwIfNotFound: true);
            m_YVRRight_PokeRotation = m_YVRRight.FindAction("Poke Rotation", throwIfNotFound: true);
            m_YVRRight_GripPosition = m_YVRRight.FindAction("Grip Position", throwIfNotFound: true);
            m_YVRRight_GripRotation = m_YVRRight.FindAction("Grip Rotation", throwIfNotFound: true);
            m_YVRRight_AnyClick = m_YVRRight.FindAction("AnyClick", throwIfNotFound: true);
            m_YVRRight_AnyTouch = m_YVRRight.FindAction("AnyTouch", throwIfNotFound: true);
            m_YVRRight_PrimaryButton = m_YVRRight.FindAction("PrimaryButton", throwIfNotFound: true);
            m_YVRRight_SecondaryButton = m_YVRRight.FindAction("SecondaryButton", throwIfNotFound: true);
            m_YVRRight_Trigger = m_YVRRight.FindAction("Trigger", throwIfNotFound: true);
            m_YVRRight_TriggerValue = m_YVRRight.FindAction("TriggerValue", throwIfNotFound: true);
            m_YVRRight_Grip = m_YVRRight.FindAction("Grip", throwIfNotFound: true);
            m_YVRRight_GripValue = m_YVRRight.FindAction("GripValue", throwIfNotFound: true);
            m_YVRRight_Meun = m_YVRRight.FindAction("Meun", throwIfNotFound: true);
            m_YVRRight_ThumbStick = m_YVRRight.FindAction("ThumbStick", throwIfNotFound: true);
            m_YVRRight_ThumbStickClick = m_YVRRight.FindAction("ThumbStickClick", throwIfNotFound: true);
            m_YVRRight_ThumbStickUp = m_YVRRight.FindAction("ThumbStickUp", throwIfNotFound: true);
            m_YVRRight_ThumbStickDown = m_YVRRight.FindAction("ThumbStickDown", throwIfNotFound: true);
            m_YVRRight_ThumbStickLeft = m_YVRRight.FindAction("ThumbStickLeft", throwIfNotFound: true);
            m_YVRRight_ThumbStickRight = m_YVRRight.FindAction("ThumbStickRight", throwIfNotFound: true);
            m_YVRRight_IndexPressed = m_YVRRight.FindAction("IndexPressed", throwIfNotFound: true);
            m_YVRRight_IndexPressValue = m_YVRRight.FindAction("IndexPressValue", throwIfNotFound: true);
            // YVR Right Interaction
            m_YVRRightInteraction = asset.FindActionMap("YVR Right Interaction", throwIfNotFound: true);
            m_YVRRightInteraction_Select = m_YVRRightInteraction.FindAction("Select", throwIfNotFound: true);
            m_YVRRightInteraction_SelectValue = m_YVRRightInteraction.FindAction("Select Value", throwIfNotFound: true);
            m_YVRRightInteraction_Activate = m_YVRRightInteraction.FindAction("Activate", throwIfNotFound: true);
            m_YVRRightInteraction_ActivateValue = m_YVRRightInteraction.FindAction("Activate Value", throwIfNotFound: true);
            m_YVRRightInteraction_UIPress = m_YVRRightInteraction.FindAction("UI Press", throwIfNotFound: true);
            m_YVRRightInteraction_UIPressValue = m_YVRRightInteraction.FindAction("UI Press Value", throwIfNotFound: true);
            m_YVRRightInteraction_UIScroll = m_YVRRightInteraction.FindAction("UI Scroll", throwIfNotFound: true);
            m_YVRRightInteraction_TranslateManipulation = m_YVRRightInteraction.FindAction("Translate Manipulation", throwIfNotFound: true);
            m_YVRRightInteraction_RotateManipulation = m_YVRRightInteraction.FindAction("Rotate Manipulation", throwIfNotFound: true);
            m_YVRRightInteraction_DirectionalManipulation = m_YVRRightInteraction.FindAction("Directional Manipulation", throwIfNotFound: true);
            m_YVRRightInteraction_ScaleToggle = m_YVRRightInteraction.FindAction("Scale Toggle", throwIfNotFound: true);
            m_YVRRightInteraction_ScaleOverTime = m_YVRRightInteraction.FindAction("Scale Over Time", throwIfNotFound: true);
            // YVR Eye
            m_YVREye = asset.FindActionMap("YVR Eye", throwIfNotFound: true);
            m_YVREye_devicePosition = m_YVREye.FindAction("devicePosition", throwIfNotFound: true);
            m_YVREye_deviceRotation = m_YVREye.FindAction("deviceRotation", throwIfNotFound: true);
            m_YVREye_isTracked = m_YVREye.FindAction("isTracked", throwIfNotFound: true);
            m_YVREye_EyePress = m_YVREye.FindAction("EyePress", throwIfNotFound: true);
        }

        ~@YVRInputActions()
        {
            Debug.Assert(!m_YVRHead.enabled, "This will cause a leak and performance issues, YVRInputActions.YVRHead.Disable() has not been called.");
            Debug.Assert(!m_YVRLeft.enabled, "This will cause a leak and performance issues, YVRInputActions.YVRLeft.Disable() has not been called.");
            Debug.Assert(!m_YVRLeftInteraction.enabled, "This will cause a leak and performance issues, YVRInputActions.YVRLeftInteraction.Disable() has not been called.");
            Debug.Assert(!m_YVRRight.enabled, "This will cause a leak and performance issues, YVRInputActions.YVRRight.Disable() has not been called.");
            Debug.Assert(!m_YVRRightInteraction.enabled, "This will cause a leak and performance issues, YVRInputActions.YVRRightInteraction.Disable() has not been called.");
            Debug.Assert(!m_YVREye.enabled, "This will cause a leak and performance issues, YVRInputActions.YVREye.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // YVR Head
        private readonly InputActionMap m_YVRHead;
        private List<IYVRHeadActions> m_YVRHeadActionsCallbackInterfaces = new List<IYVRHeadActions>();
        private readonly InputAction m_YVRHead_Position;
        private readonly InputAction m_YVRHead_Rotation;
        private readonly InputAction m_YVRHead_IsTracked;
        private readonly InputAction m_YVRHead_TrackingState;
        private readonly InputAction m_YVRHead_EyeGazePosition;
        private readonly InputAction m_YVRHead_EyeGazeRotation;
        private readonly InputAction m_YVRHead_EyeGazeIsTracked;
        private readonly InputAction m_YVRHead_EyeGazeTrackingState;
        public struct YVRHeadActions
        {
            private @YVRInputActions m_Wrapper;
            public YVRHeadActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_YVRHead_Position;
            public InputAction @Rotation => m_Wrapper.m_YVRHead_Rotation;
            public InputAction @IsTracked => m_Wrapper.m_YVRHead_IsTracked;
            public InputAction @TrackingState => m_Wrapper.m_YVRHead_TrackingState;
            public InputAction @EyeGazePosition => m_Wrapper.m_YVRHead_EyeGazePosition;
            public InputAction @EyeGazeRotation => m_Wrapper.m_YVRHead_EyeGazeRotation;
            public InputAction @EyeGazeIsTracked => m_Wrapper.m_YVRHead_EyeGazeIsTracked;
            public InputAction @EyeGazeTrackingState => m_Wrapper.m_YVRHead_EyeGazeTrackingState;
            public InputActionMap Get() { return m_Wrapper.m_YVRHead; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVRHeadActions set) { return set.Get(); }
            public void AddCallbacks(IYVRHeadActions instance)
            {
                if (instance == null || m_Wrapper.m_YVRHeadActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVRHeadActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @IsTracked.started += instance.OnIsTracked;
                @IsTracked.performed += instance.OnIsTracked;
                @IsTracked.canceled += instance.OnIsTracked;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @EyeGazePosition.started += instance.OnEyeGazePosition;
                @EyeGazePosition.performed += instance.OnEyeGazePosition;
                @EyeGazePosition.canceled += instance.OnEyeGazePosition;
                @EyeGazeRotation.started += instance.OnEyeGazeRotation;
                @EyeGazeRotation.performed += instance.OnEyeGazeRotation;
                @EyeGazeRotation.canceled += instance.OnEyeGazeRotation;
                @EyeGazeIsTracked.started += instance.OnEyeGazeIsTracked;
                @EyeGazeIsTracked.performed += instance.OnEyeGazeIsTracked;
                @EyeGazeIsTracked.canceled += instance.OnEyeGazeIsTracked;
                @EyeGazeTrackingState.started += instance.OnEyeGazeTrackingState;
                @EyeGazeTrackingState.performed += instance.OnEyeGazeTrackingState;
                @EyeGazeTrackingState.canceled += instance.OnEyeGazeTrackingState;
            }

            private void UnregisterCallbacks(IYVRHeadActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Rotation.started -= instance.OnRotation;
                @Rotation.performed -= instance.OnRotation;
                @Rotation.canceled -= instance.OnRotation;
                @IsTracked.started -= instance.OnIsTracked;
                @IsTracked.performed -= instance.OnIsTracked;
                @IsTracked.canceled -= instance.OnIsTracked;
                @TrackingState.started -= instance.OnTrackingState;
                @TrackingState.performed -= instance.OnTrackingState;
                @TrackingState.canceled -= instance.OnTrackingState;
                @EyeGazePosition.started -= instance.OnEyeGazePosition;
                @EyeGazePosition.performed -= instance.OnEyeGazePosition;
                @EyeGazePosition.canceled -= instance.OnEyeGazePosition;
                @EyeGazeRotation.started -= instance.OnEyeGazeRotation;
                @EyeGazeRotation.performed -= instance.OnEyeGazeRotation;
                @EyeGazeRotation.canceled -= instance.OnEyeGazeRotation;
                @EyeGazeIsTracked.started -= instance.OnEyeGazeIsTracked;
                @EyeGazeIsTracked.performed -= instance.OnEyeGazeIsTracked;
                @EyeGazeIsTracked.canceled -= instance.OnEyeGazeIsTracked;
                @EyeGazeTrackingState.started -= instance.OnEyeGazeTrackingState;
                @EyeGazeTrackingState.performed -= instance.OnEyeGazeTrackingState;
                @EyeGazeTrackingState.canceled -= instance.OnEyeGazeTrackingState;
            }

            public void RemoveCallbacks(IYVRHeadActions instance)
            {
                if (m_Wrapper.m_YVRHeadActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVRHeadActions instance)
            {
                foreach (var item in m_Wrapper.m_YVRHeadActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVRHeadActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVRHeadActions @YVRHead => new YVRHeadActions(this);

        // YVR Left
        private readonly InputActionMap m_YVRLeft;
        private List<IYVRLeftActions> m_YVRLeftActionsCallbackInterfaces = new List<IYVRLeftActions>();
        private readonly InputAction m_YVRLeft_Position;
        private readonly InputAction m_YVRLeft_Rotation;
        private readonly InputAction m_YVRLeft_IsTracked;
        private readonly InputAction m_YVRLeft_TrackingState;
        private readonly InputAction m_YVRLeft_HapticDevice;
        private readonly InputAction m_YVRLeft_AimPosition;
        private readonly InputAction m_YVRLeft_AimRotation;
        private readonly InputAction m_YVRLeft_AimFlags;
        private readonly InputAction m_YVRLeft_PinchPosition;
        private readonly InputAction m_YVRLeft_PokePosition;
        private readonly InputAction m_YVRLeft_PokeRotation;
        private readonly InputAction m_YVRLeft_GripPosition;
        private readonly InputAction m_YVRLeft_GripRotation;
        private readonly InputAction m_YVRLeft_AnyClick;
        private readonly InputAction m_YVRLeft_AnyTouch;
        private readonly InputAction m_YVRLeft_PrimaryButton;
        private readonly InputAction m_YVRLeft_SecondaryButton;
        private readonly InputAction m_YVRLeft_Trigger;
        private readonly InputAction m_YVRLeft_TriggerValue;
        private readonly InputAction m_YVRLeft_Grip;
        private readonly InputAction m_YVRLeft_GripValue;
        private readonly InputAction m_YVRLeft_Meun;
        private readonly InputAction m_YVRLeft_ThumbStick;
        private readonly InputAction m_YVRLeft_ThumbStickClick;
        private readonly InputAction m_YVRLeft_ThumbStickUp;
        private readonly InputAction m_YVRLeft_ThumbStickDown;
        private readonly InputAction m_YVRLeft_ThumbStickLeft;
        private readonly InputAction m_YVRLeft_ThumbStickRight;
        private readonly InputAction m_YVRLeft_IndexPressed;
        private readonly InputAction m_YVRLeft_IndexPressValue;
        public struct YVRLeftActions
        {
            private @YVRInputActions m_Wrapper;
            public YVRLeftActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_YVRLeft_Position;
            public InputAction @Rotation => m_Wrapper.m_YVRLeft_Rotation;
            public InputAction @IsTracked => m_Wrapper.m_YVRLeft_IsTracked;
            public InputAction @TrackingState => m_Wrapper.m_YVRLeft_TrackingState;
            public InputAction @HapticDevice => m_Wrapper.m_YVRLeft_HapticDevice;
            public InputAction @AimPosition => m_Wrapper.m_YVRLeft_AimPosition;
            public InputAction @AimRotation => m_Wrapper.m_YVRLeft_AimRotation;
            public InputAction @AimFlags => m_Wrapper.m_YVRLeft_AimFlags;
            public InputAction @PinchPosition => m_Wrapper.m_YVRLeft_PinchPosition;
            public InputAction @PokePosition => m_Wrapper.m_YVRLeft_PokePosition;
            public InputAction @PokeRotation => m_Wrapper.m_YVRLeft_PokeRotation;
            public InputAction @GripPosition => m_Wrapper.m_YVRLeft_GripPosition;
            public InputAction @GripRotation => m_Wrapper.m_YVRLeft_GripRotation;
            public InputAction @AnyClick => m_Wrapper.m_YVRLeft_AnyClick;
            public InputAction @AnyTouch => m_Wrapper.m_YVRLeft_AnyTouch;
            public InputAction @PrimaryButton => m_Wrapper.m_YVRLeft_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_YVRLeft_SecondaryButton;
            public InputAction @Trigger => m_Wrapper.m_YVRLeft_Trigger;
            public InputAction @TriggerValue => m_Wrapper.m_YVRLeft_TriggerValue;
            public InputAction @Grip => m_Wrapper.m_YVRLeft_Grip;
            public InputAction @GripValue => m_Wrapper.m_YVRLeft_GripValue;
            public InputAction @Meun => m_Wrapper.m_YVRLeft_Meun;
            public InputAction @ThumbStick => m_Wrapper.m_YVRLeft_ThumbStick;
            public InputAction @ThumbStickClick => m_Wrapper.m_YVRLeft_ThumbStickClick;
            public InputAction @ThumbStickUp => m_Wrapper.m_YVRLeft_ThumbStickUp;
            public InputAction @ThumbStickDown => m_Wrapper.m_YVRLeft_ThumbStickDown;
            public InputAction @ThumbStickLeft => m_Wrapper.m_YVRLeft_ThumbStickLeft;
            public InputAction @ThumbStickRight => m_Wrapper.m_YVRLeft_ThumbStickRight;
            public InputAction @IndexPressed => m_Wrapper.m_YVRLeft_IndexPressed;
            public InputAction @IndexPressValue => m_Wrapper.m_YVRLeft_IndexPressValue;
            public InputActionMap Get() { return m_Wrapper.m_YVRLeft; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVRLeftActions set) { return set.Get(); }
            public void AddCallbacks(IYVRLeftActions instance)
            {
                if (instance == null || m_Wrapper.m_YVRLeftActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVRLeftActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @IsTracked.started += instance.OnIsTracked;
                @IsTracked.performed += instance.OnIsTracked;
                @IsTracked.canceled += instance.OnIsTracked;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @AimPosition.started += instance.OnAimPosition;
                @AimPosition.performed += instance.OnAimPosition;
                @AimPosition.canceled += instance.OnAimPosition;
                @AimRotation.started += instance.OnAimRotation;
                @AimRotation.performed += instance.OnAimRotation;
                @AimRotation.canceled += instance.OnAimRotation;
                @AimFlags.started += instance.OnAimFlags;
                @AimFlags.performed += instance.OnAimFlags;
                @AimFlags.canceled += instance.OnAimFlags;
                @PinchPosition.started += instance.OnPinchPosition;
                @PinchPosition.performed += instance.OnPinchPosition;
                @PinchPosition.canceled += instance.OnPinchPosition;
                @PokePosition.started += instance.OnPokePosition;
                @PokePosition.performed += instance.OnPokePosition;
                @PokePosition.canceled += instance.OnPokePosition;
                @PokeRotation.started += instance.OnPokeRotation;
                @PokeRotation.performed += instance.OnPokeRotation;
                @PokeRotation.canceled += instance.OnPokeRotation;
                @GripPosition.started += instance.OnGripPosition;
                @GripPosition.performed += instance.OnGripPosition;
                @GripPosition.canceled += instance.OnGripPosition;
                @GripRotation.started += instance.OnGripRotation;
                @GripRotation.performed += instance.OnGripRotation;
                @GripRotation.canceled += instance.OnGripRotation;
                @AnyClick.started += instance.OnAnyClick;
                @AnyClick.performed += instance.OnAnyClick;
                @AnyClick.canceled += instance.OnAnyClick;
                @AnyTouch.started += instance.OnAnyTouch;
                @AnyTouch.performed += instance.OnAnyTouch;
                @AnyTouch.canceled += instance.OnAnyTouch;
                @PrimaryButton.started += instance.OnPrimaryButton;
                @PrimaryButton.performed += instance.OnPrimaryButton;
                @PrimaryButton.canceled += instance.OnPrimaryButton;
                @SecondaryButton.started += instance.OnSecondaryButton;
                @SecondaryButton.performed += instance.OnSecondaryButton;
                @SecondaryButton.canceled += instance.OnSecondaryButton;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @TriggerValue.started += instance.OnTriggerValue;
                @TriggerValue.performed += instance.OnTriggerValue;
                @TriggerValue.canceled += instance.OnTriggerValue;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @GripValue.started += instance.OnGripValue;
                @GripValue.performed += instance.OnGripValue;
                @GripValue.canceled += instance.OnGripValue;
                @Meun.started += instance.OnMeun;
                @Meun.performed += instance.OnMeun;
                @Meun.canceled += instance.OnMeun;
                @ThumbStick.started += instance.OnThumbStick;
                @ThumbStick.performed += instance.OnThumbStick;
                @ThumbStick.canceled += instance.OnThumbStick;
                @ThumbStickClick.started += instance.OnThumbStickClick;
                @ThumbStickClick.performed += instance.OnThumbStickClick;
                @ThumbStickClick.canceled += instance.OnThumbStickClick;
                @ThumbStickUp.started += instance.OnThumbStickUp;
                @ThumbStickUp.performed += instance.OnThumbStickUp;
                @ThumbStickUp.canceled += instance.OnThumbStickUp;
                @ThumbStickDown.started += instance.OnThumbStickDown;
                @ThumbStickDown.performed += instance.OnThumbStickDown;
                @ThumbStickDown.canceled += instance.OnThumbStickDown;
                @ThumbStickLeft.started += instance.OnThumbStickLeft;
                @ThumbStickLeft.performed += instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled += instance.OnThumbStickLeft;
                @ThumbStickRight.started += instance.OnThumbStickRight;
                @ThumbStickRight.performed += instance.OnThumbStickRight;
                @ThumbStickRight.canceled += instance.OnThumbStickRight;
                @IndexPressed.started += instance.OnIndexPressed;
                @IndexPressed.performed += instance.OnIndexPressed;
                @IndexPressed.canceled += instance.OnIndexPressed;
                @IndexPressValue.started += instance.OnIndexPressValue;
                @IndexPressValue.performed += instance.OnIndexPressValue;
                @IndexPressValue.canceled += instance.OnIndexPressValue;
            }

            private void UnregisterCallbacks(IYVRLeftActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Rotation.started -= instance.OnRotation;
                @Rotation.performed -= instance.OnRotation;
                @Rotation.canceled -= instance.OnRotation;
                @IsTracked.started -= instance.OnIsTracked;
                @IsTracked.performed -= instance.OnIsTracked;
                @IsTracked.canceled -= instance.OnIsTracked;
                @TrackingState.started -= instance.OnTrackingState;
                @TrackingState.performed -= instance.OnTrackingState;
                @TrackingState.canceled -= instance.OnTrackingState;
                @HapticDevice.started -= instance.OnHapticDevice;
                @HapticDevice.performed -= instance.OnHapticDevice;
                @HapticDevice.canceled -= instance.OnHapticDevice;
                @AimPosition.started -= instance.OnAimPosition;
                @AimPosition.performed -= instance.OnAimPosition;
                @AimPosition.canceled -= instance.OnAimPosition;
                @AimRotation.started -= instance.OnAimRotation;
                @AimRotation.performed -= instance.OnAimRotation;
                @AimRotation.canceled -= instance.OnAimRotation;
                @AimFlags.started -= instance.OnAimFlags;
                @AimFlags.performed -= instance.OnAimFlags;
                @AimFlags.canceled -= instance.OnAimFlags;
                @PinchPosition.started -= instance.OnPinchPosition;
                @PinchPosition.performed -= instance.OnPinchPosition;
                @PinchPosition.canceled -= instance.OnPinchPosition;
                @PokePosition.started -= instance.OnPokePosition;
                @PokePosition.performed -= instance.OnPokePosition;
                @PokePosition.canceled -= instance.OnPokePosition;
                @PokeRotation.started -= instance.OnPokeRotation;
                @PokeRotation.performed -= instance.OnPokeRotation;
                @PokeRotation.canceled -= instance.OnPokeRotation;
                @GripPosition.started -= instance.OnGripPosition;
                @GripPosition.performed -= instance.OnGripPosition;
                @GripPosition.canceled -= instance.OnGripPosition;
                @GripRotation.started -= instance.OnGripRotation;
                @GripRotation.performed -= instance.OnGripRotation;
                @GripRotation.canceled -= instance.OnGripRotation;
                @AnyClick.started -= instance.OnAnyClick;
                @AnyClick.performed -= instance.OnAnyClick;
                @AnyClick.canceled -= instance.OnAnyClick;
                @AnyTouch.started -= instance.OnAnyTouch;
                @AnyTouch.performed -= instance.OnAnyTouch;
                @AnyTouch.canceled -= instance.OnAnyTouch;
                @PrimaryButton.started -= instance.OnPrimaryButton;
                @PrimaryButton.performed -= instance.OnPrimaryButton;
                @PrimaryButton.canceled -= instance.OnPrimaryButton;
                @SecondaryButton.started -= instance.OnSecondaryButton;
                @SecondaryButton.performed -= instance.OnSecondaryButton;
                @SecondaryButton.canceled -= instance.OnSecondaryButton;
                @Trigger.started -= instance.OnTrigger;
                @Trigger.performed -= instance.OnTrigger;
                @Trigger.canceled -= instance.OnTrigger;
                @TriggerValue.started -= instance.OnTriggerValue;
                @TriggerValue.performed -= instance.OnTriggerValue;
                @TriggerValue.canceled -= instance.OnTriggerValue;
                @Grip.started -= instance.OnGrip;
                @Grip.performed -= instance.OnGrip;
                @Grip.canceled -= instance.OnGrip;
                @GripValue.started -= instance.OnGripValue;
                @GripValue.performed -= instance.OnGripValue;
                @GripValue.canceled -= instance.OnGripValue;
                @Meun.started -= instance.OnMeun;
                @Meun.performed -= instance.OnMeun;
                @Meun.canceled -= instance.OnMeun;
                @ThumbStick.started -= instance.OnThumbStick;
                @ThumbStick.performed -= instance.OnThumbStick;
                @ThumbStick.canceled -= instance.OnThumbStick;
                @ThumbStickClick.started -= instance.OnThumbStickClick;
                @ThumbStickClick.performed -= instance.OnThumbStickClick;
                @ThumbStickClick.canceled -= instance.OnThumbStickClick;
                @ThumbStickUp.started -= instance.OnThumbStickUp;
                @ThumbStickUp.performed -= instance.OnThumbStickUp;
                @ThumbStickUp.canceled -= instance.OnThumbStickUp;
                @ThumbStickDown.started -= instance.OnThumbStickDown;
                @ThumbStickDown.performed -= instance.OnThumbStickDown;
                @ThumbStickDown.canceled -= instance.OnThumbStickDown;
                @ThumbStickLeft.started -= instance.OnThumbStickLeft;
                @ThumbStickLeft.performed -= instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled -= instance.OnThumbStickLeft;
                @ThumbStickRight.started -= instance.OnThumbStickRight;
                @ThumbStickRight.performed -= instance.OnThumbStickRight;
                @ThumbStickRight.canceled -= instance.OnThumbStickRight;
                @IndexPressed.started -= instance.OnIndexPressed;
                @IndexPressed.performed -= instance.OnIndexPressed;
                @IndexPressed.canceled -= instance.OnIndexPressed;
                @IndexPressValue.started -= instance.OnIndexPressValue;
                @IndexPressValue.performed -= instance.OnIndexPressValue;
                @IndexPressValue.canceled -= instance.OnIndexPressValue;
            }

            public void RemoveCallbacks(IYVRLeftActions instance)
            {
                if (m_Wrapper.m_YVRLeftActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVRLeftActions instance)
            {
                foreach (var item in m_Wrapper.m_YVRLeftActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVRLeftActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVRLeftActions @YVRLeft => new YVRLeftActions(this);

        // YVR Left Interaction
        private readonly InputActionMap m_YVRLeftInteraction;
        private List<IYVRLeftInteractionActions> m_YVRLeftInteractionActionsCallbackInterfaces = new List<IYVRLeftInteractionActions>();
        private readonly InputAction m_YVRLeftInteraction_Select;
        private readonly InputAction m_YVRLeftInteraction_SelectValue;
        private readonly InputAction m_YVRLeftInteraction_Activate;
        private readonly InputAction m_YVRLeftInteraction_ActivateValue;
        private readonly InputAction m_YVRLeftInteraction_UIPress;
        private readonly InputAction m_YVRLeftInteraction_UIPressValue;
        private readonly InputAction m_YVRLeftInteraction_UIScroll;
        private readonly InputAction m_YVRLeftInteraction_TranslateManipulation;
        private readonly InputAction m_YVRLeftInteraction_RotateManipulation;
        private readonly InputAction m_YVRLeftInteraction_DirectionalManipulation;
        private readonly InputAction m_YVRLeftInteraction_ScaleToggle;
        private readonly InputAction m_YVRLeftInteraction_ScaleOverTime;
        public struct YVRLeftInteractionActions
        {
            private @YVRInputActions m_Wrapper;
            public YVRLeftInteractionActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Select => m_Wrapper.m_YVRLeftInteraction_Select;
            public InputAction @SelectValue => m_Wrapper.m_YVRLeftInteraction_SelectValue;
            public InputAction @Activate => m_Wrapper.m_YVRLeftInteraction_Activate;
            public InputAction @ActivateValue => m_Wrapper.m_YVRLeftInteraction_ActivateValue;
            public InputAction @UIPress => m_Wrapper.m_YVRLeftInteraction_UIPress;
            public InputAction @UIPressValue => m_Wrapper.m_YVRLeftInteraction_UIPressValue;
            public InputAction @UIScroll => m_Wrapper.m_YVRLeftInteraction_UIScroll;
            public InputAction @TranslateManipulation => m_Wrapper.m_YVRLeftInteraction_TranslateManipulation;
            public InputAction @RotateManipulation => m_Wrapper.m_YVRLeftInteraction_RotateManipulation;
            public InputAction @DirectionalManipulation => m_Wrapper.m_YVRLeftInteraction_DirectionalManipulation;
            public InputAction @ScaleToggle => m_Wrapper.m_YVRLeftInteraction_ScaleToggle;
            public InputAction @ScaleOverTime => m_Wrapper.m_YVRLeftInteraction_ScaleOverTime;
            public InputActionMap Get() { return m_Wrapper.m_YVRLeftInteraction; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVRLeftInteractionActions set) { return set.Get(); }
            public void AddCallbacks(IYVRLeftInteractionActions instance)
            {
                if (instance == null || m_Wrapper.m_YVRLeftInteractionActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVRLeftInteractionActionsCallbackInterfaces.Add(instance);
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @SelectValue.started += instance.OnSelectValue;
                @SelectValue.performed += instance.OnSelectValue;
                @SelectValue.canceled += instance.OnSelectValue;
                @Activate.started += instance.OnActivate;
                @Activate.performed += instance.OnActivate;
                @Activate.canceled += instance.OnActivate;
                @ActivateValue.started += instance.OnActivateValue;
                @ActivateValue.performed += instance.OnActivateValue;
                @ActivateValue.canceled += instance.OnActivateValue;
                @UIPress.started += instance.OnUIPress;
                @UIPress.performed += instance.OnUIPress;
                @UIPress.canceled += instance.OnUIPress;
                @UIPressValue.started += instance.OnUIPressValue;
                @UIPressValue.performed += instance.OnUIPressValue;
                @UIPressValue.canceled += instance.OnUIPressValue;
                @UIScroll.started += instance.OnUIScroll;
                @UIScroll.performed += instance.OnUIScroll;
                @UIScroll.canceled += instance.OnUIScroll;
                @TranslateManipulation.started += instance.OnTranslateManipulation;
                @TranslateManipulation.performed += instance.OnTranslateManipulation;
                @TranslateManipulation.canceled += instance.OnTranslateManipulation;
                @RotateManipulation.started += instance.OnRotateManipulation;
                @RotateManipulation.performed += instance.OnRotateManipulation;
                @RotateManipulation.canceled += instance.OnRotateManipulation;
                @DirectionalManipulation.started += instance.OnDirectionalManipulation;
                @DirectionalManipulation.performed += instance.OnDirectionalManipulation;
                @DirectionalManipulation.canceled += instance.OnDirectionalManipulation;
                @ScaleToggle.started += instance.OnScaleToggle;
                @ScaleToggle.performed += instance.OnScaleToggle;
                @ScaleToggle.canceled += instance.OnScaleToggle;
                @ScaleOverTime.started += instance.OnScaleOverTime;
                @ScaleOverTime.performed += instance.OnScaleOverTime;
                @ScaleOverTime.canceled += instance.OnScaleOverTime;
            }

            private void UnregisterCallbacks(IYVRLeftInteractionActions instance)
            {
                @Select.started -= instance.OnSelect;
                @Select.performed -= instance.OnSelect;
                @Select.canceled -= instance.OnSelect;
                @SelectValue.started -= instance.OnSelectValue;
                @SelectValue.performed -= instance.OnSelectValue;
                @SelectValue.canceled -= instance.OnSelectValue;
                @Activate.started -= instance.OnActivate;
                @Activate.performed -= instance.OnActivate;
                @Activate.canceled -= instance.OnActivate;
                @ActivateValue.started -= instance.OnActivateValue;
                @ActivateValue.performed -= instance.OnActivateValue;
                @ActivateValue.canceled -= instance.OnActivateValue;
                @UIPress.started -= instance.OnUIPress;
                @UIPress.performed -= instance.OnUIPress;
                @UIPress.canceled -= instance.OnUIPress;
                @UIPressValue.started -= instance.OnUIPressValue;
                @UIPressValue.performed -= instance.OnUIPressValue;
                @UIPressValue.canceled -= instance.OnUIPressValue;
                @UIScroll.started -= instance.OnUIScroll;
                @UIScroll.performed -= instance.OnUIScroll;
                @UIScroll.canceled -= instance.OnUIScroll;
                @TranslateManipulation.started -= instance.OnTranslateManipulation;
                @TranslateManipulation.performed -= instance.OnTranslateManipulation;
                @TranslateManipulation.canceled -= instance.OnTranslateManipulation;
                @RotateManipulation.started -= instance.OnRotateManipulation;
                @RotateManipulation.performed -= instance.OnRotateManipulation;
                @RotateManipulation.canceled -= instance.OnRotateManipulation;
                @DirectionalManipulation.started -= instance.OnDirectionalManipulation;
                @DirectionalManipulation.performed -= instance.OnDirectionalManipulation;
                @DirectionalManipulation.canceled -= instance.OnDirectionalManipulation;
                @ScaleToggle.started -= instance.OnScaleToggle;
                @ScaleToggle.performed -= instance.OnScaleToggle;
                @ScaleToggle.canceled -= instance.OnScaleToggle;
                @ScaleOverTime.started -= instance.OnScaleOverTime;
                @ScaleOverTime.performed -= instance.OnScaleOverTime;
                @ScaleOverTime.canceled -= instance.OnScaleOverTime;
            }

            public void RemoveCallbacks(IYVRLeftInteractionActions instance)
            {
                if (m_Wrapper.m_YVRLeftInteractionActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVRLeftInteractionActions instance)
            {
                foreach (var item in m_Wrapper.m_YVRLeftInteractionActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVRLeftInteractionActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVRLeftInteractionActions @YVRLeftInteraction => new YVRLeftInteractionActions(this);

        // YVR Right
        private readonly InputActionMap m_YVRRight;
        private List<IYVRRightActions> m_YVRRightActionsCallbackInterfaces = new List<IYVRRightActions>();
        private readonly InputAction m_YVRRight_Position;
        private readonly InputAction m_YVRRight_Rotation;
        private readonly InputAction m_YVRRight_IsTracked;
        private readonly InputAction m_YVRRight_TrackingState;
        private readonly InputAction m_YVRRight_HapticDevice;
        private readonly InputAction m_YVRRight_AimPosition;
        private readonly InputAction m_YVRRight_AimRotation;
        private readonly InputAction m_YVRRight_AimFlags;
        private readonly InputAction m_YVRRight_PinchPosition;
        private readonly InputAction m_YVRRight_PokePosition;
        private readonly InputAction m_YVRRight_PokeRotation;
        private readonly InputAction m_YVRRight_GripPosition;
        private readonly InputAction m_YVRRight_GripRotation;
        private readonly InputAction m_YVRRight_AnyClick;
        private readonly InputAction m_YVRRight_AnyTouch;
        private readonly InputAction m_YVRRight_PrimaryButton;
        private readonly InputAction m_YVRRight_SecondaryButton;
        private readonly InputAction m_YVRRight_Trigger;
        private readonly InputAction m_YVRRight_TriggerValue;
        private readonly InputAction m_YVRRight_Grip;
        private readonly InputAction m_YVRRight_GripValue;
        private readonly InputAction m_YVRRight_Meun;
        private readonly InputAction m_YVRRight_ThumbStick;
        private readonly InputAction m_YVRRight_ThumbStickClick;
        private readonly InputAction m_YVRRight_ThumbStickUp;
        private readonly InputAction m_YVRRight_ThumbStickDown;
        private readonly InputAction m_YVRRight_ThumbStickLeft;
        private readonly InputAction m_YVRRight_ThumbStickRight;
        private readonly InputAction m_YVRRight_IndexPressed;
        private readonly InputAction m_YVRRight_IndexPressValue;
        public struct YVRRightActions
        {
            private @YVRInputActions m_Wrapper;
            public YVRRightActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_YVRRight_Position;
            public InputAction @Rotation => m_Wrapper.m_YVRRight_Rotation;
            public InputAction @IsTracked => m_Wrapper.m_YVRRight_IsTracked;
            public InputAction @TrackingState => m_Wrapper.m_YVRRight_TrackingState;
            public InputAction @HapticDevice => m_Wrapper.m_YVRRight_HapticDevice;
            public InputAction @AimPosition => m_Wrapper.m_YVRRight_AimPosition;
            public InputAction @AimRotation => m_Wrapper.m_YVRRight_AimRotation;
            public InputAction @AimFlags => m_Wrapper.m_YVRRight_AimFlags;
            public InputAction @PinchPosition => m_Wrapper.m_YVRRight_PinchPosition;
            public InputAction @PokePosition => m_Wrapper.m_YVRRight_PokePosition;
            public InputAction @PokeRotation => m_Wrapper.m_YVRRight_PokeRotation;
            public InputAction @GripPosition => m_Wrapper.m_YVRRight_GripPosition;
            public InputAction @GripRotation => m_Wrapper.m_YVRRight_GripRotation;
            public InputAction @AnyClick => m_Wrapper.m_YVRRight_AnyClick;
            public InputAction @AnyTouch => m_Wrapper.m_YVRRight_AnyTouch;
            public InputAction @PrimaryButton => m_Wrapper.m_YVRRight_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_YVRRight_SecondaryButton;
            public InputAction @Trigger => m_Wrapper.m_YVRRight_Trigger;
            public InputAction @TriggerValue => m_Wrapper.m_YVRRight_TriggerValue;
            public InputAction @Grip => m_Wrapper.m_YVRRight_Grip;
            public InputAction @GripValue => m_Wrapper.m_YVRRight_GripValue;
            public InputAction @Meun => m_Wrapper.m_YVRRight_Meun;
            public InputAction @ThumbStick => m_Wrapper.m_YVRRight_ThumbStick;
            public InputAction @ThumbStickClick => m_Wrapper.m_YVRRight_ThumbStickClick;
            public InputAction @ThumbStickUp => m_Wrapper.m_YVRRight_ThumbStickUp;
            public InputAction @ThumbStickDown => m_Wrapper.m_YVRRight_ThumbStickDown;
            public InputAction @ThumbStickLeft => m_Wrapper.m_YVRRight_ThumbStickLeft;
            public InputAction @ThumbStickRight => m_Wrapper.m_YVRRight_ThumbStickRight;
            public InputAction @IndexPressed => m_Wrapper.m_YVRRight_IndexPressed;
            public InputAction @IndexPressValue => m_Wrapper.m_YVRRight_IndexPressValue;
            public InputActionMap Get() { return m_Wrapper.m_YVRRight; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVRRightActions set) { return set.Get(); }
            public void AddCallbacks(IYVRRightActions instance)
            {
                if (instance == null || m_Wrapper.m_YVRRightActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVRRightActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @IsTracked.started += instance.OnIsTracked;
                @IsTracked.performed += instance.OnIsTracked;
                @IsTracked.canceled += instance.OnIsTracked;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @AimPosition.started += instance.OnAimPosition;
                @AimPosition.performed += instance.OnAimPosition;
                @AimPosition.canceled += instance.OnAimPosition;
                @AimRotation.started += instance.OnAimRotation;
                @AimRotation.performed += instance.OnAimRotation;
                @AimRotation.canceled += instance.OnAimRotation;
                @AimFlags.started += instance.OnAimFlags;
                @AimFlags.performed += instance.OnAimFlags;
                @AimFlags.canceled += instance.OnAimFlags;
                @PinchPosition.started += instance.OnPinchPosition;
                @PinchPosition.performed += instance.OnPinchPosition;
                @PinchPosition.canceled += instance.OnPinchPosition;
                @PokePosition.started += instance.OnPokePosition;
                @PokePosition.performed += instance.OnPokePosition;
                @PokePosition.canceled += instance.OnPokePosition;
                @PokeRotation.started += instance.OnPokeRotation;
                @PokeRotation.performed += instance.OnPokeRotation;
                @PokeRotation.canceled += instance.OnPokeRotation;
                @GripPosition.started += instance.OnGripPosition;
                @GripPosition.performed += instance.OnGripPosition;
                @GripPosition.canceled += instance.OnGripPosition;
                @GripRotation.started += instance.OnGripRotation;
                @GripRotation.performed += instance.OnGripRotation;
                @GripRotation.canceled += instance.OnGripRotation;
                @AnyClick.started += instance.OnAnyClick;
                @AnyClick.performed += instance.OnAnyClick;
                @AnyClick.canceled += instance.OnAnyClick;
                @AnyTouch.started += instance.OnAnyTouch;
                @AnyTouch.performed += instance.OnAnyTouch;
                @AnyTouch.canceled += instance.OnAnyTouch;
                @PrimaryButton.started += instance.OnPrimaryButton;
                @PrimaryButton.performed += instance.OnPrimaryButton;
                @PrimaryButton.canceled += instance.OnPrimaryButton;
                @SecondaryButton.started += instance.OnSecondaryButton;
                @SecondaryButton.performed += instance.OnSecondaryButton;
                @SecondaryButton.canceled += instance.OnSecondaryButton;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @TriggerValue.started += instance.OnTriggerValue;
                @TriggerValue.performed += instance.OnTriggerValue;
                @TriggerValue.canceled += instance.OnTriggerValue;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @GripValue.started += instance.OnGripValue;
                @GripValue.performed += instance.OnGripValue;
                @GripValue.canceled += instance.OnGripValue;
                @Meun.started += instance.OnMeun;
                @Meun.performed += instance.OnMeun;
                @Meun.canceled += instance.OnMeun;
                @ThumbStick.started += instance.OnThumbStick;
                @ThumbStick.performed += instance.OnThumbStick;
                @ThumbStick.canceled += instance.OnThumbStick;
                @ThumbStickClick.started += instance.OnThumbStickClick;
                @ThumbStickClick.performed += instance.OnThumbStickClick;
                @ThumbStickClick.canceled += instance.OnThumbStickClick;
                @ThumbStickUp.started += instance.OnThumbStickUp;
                @ThumbStickUp.performed += instance.OnThumbStickUp;
                @ThumbStickUp.canceled += instance.OnThumbStickUp;
                @ThumbStickDown.started += instance.OnThumbStickDown;
                @ThumbStickDown.performed += instance.OnThumbStickDown;
                @ThumbStickDown.canceled += instance.OnThumbStickDown;
                @ThumbStickLeft.started += instance.OnThumbStickLeft;
                @ThumbStickLeft.performed += instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled += instance.OnThumbStickLeft;
                @ThumbStickRight.started += instance.OnThumbStickRight;
                @ThumbStickRight.performed += instance.OnThumbStickRight;
                @ThumbStickRight.canceled += instance.OnThumbStickRight;
                @IndexPressed.started += instance.OnIndexPressed;
                @IndexPressed.performed += instance.OnIndexPressed;
                @IndexPressed.canceled += instance.OnIndexPressed;
                @IndexPressValue.started += instance.OnIndexPressValue;
                @IndexPressValue.performed += instance.OnIndexPressValue;
                @IndexPressValue.canceled += instance.OnIndexPressValue;
            }

            private void UnregisterCallbacks(IYVRRightActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Rotation.started -= instance.OnRotation;
                @Rotation.performed -= instance.OnRotation;
                @Rotation.canceled -= instance.OnRotation;
                @IsTracked.started -= instance.OnIsTracked;
                @IsTracked.performed -= instance.OnIsTracked;
                @IsTracked.canceled -= instance.OnIsTracked;
                @TrackingState.started -= instance.OnTrackingState;
                @TrackingState.performed -= instance.OnTrackingState;
                @TrackingState.canceled -= instance.OnTrackingState;
                @HapticDevice.started -= instance.OnHapticDevice;
                @HapticDevice.performed -= instance.OnHapticDevice;
                @HapticDevice.canceled -= instance.OnHapticDevice;
                @AimPosition.started -= instance.OnAimPosition;
                @AimPosition.performed -= instance.OnAimPosition;
                @AimPosition.canceled -= instance.OnAimPosition;
                @AimRotation.started -= instance.OnAimRotation;
                @AimRotation.performed -= instance.OnAimRotation;
                @AimRotation.canceled -= instance.OnAimRotation;
                @AimFlags.started -= instance.OnAimFlags;
                @AimFlags.performed -= instance.OnAimFlags;
                @AimFlags.canceled -= instance.OnAimFlags;
                @PinchPosition.started -= instance.OnPinchPosition;
                @PinchPosition.performed -= instance.OnPinchPosition;
                @PinchPosition.canceled -= instance.OnPinchPosition;
                @PokePosition.started -= instance.OnPokePosition;
                @PokePosition.performed -= instance.OnPokePosition;
                @PokePosition.canceled -= instance.OnPokePosition;
                @PokeRotation.started -= instance.OnPokeRotation;
                @PokeRotation.performed -= instance.OnPokeRotation;
                @PokeRotation.canceled -= instance.OnPokeRotation;
                @GripPosition.started -= instance.OnGripPosition;
                @GripPosition.performed -= instance.OnGripPosition;
                @GripPosition.canceled -= instance.OnGripPosition;
                @GripRotation.started -= instance.OnGripRotation;
                @GripRotation.performed -= instance.OnGripRotation;
                @GripRotation.canceled -= instance.OnGripRotation;
                @AnyClick.started -= instance.OnAnyClick;
                @AnyClick.performed -= instance.OnAnyClick;
                @AnyClick.canceled -= instance.OnAnyClick;
                @AnyTouch.started -= instance.OnAnyTouch;
                @AnyTouch.performed -= instance.OnAnyTouch;
                @AnyTouch.canceled -= instance.OnAnyTouch;
                @PrimaryButton.started -= instance.OnPrimaryButton;
                @PrimaryButton.performed -= instance.OnPrimaryButton;
                @PrimaryButton.canceled -= instance.OnPrimaryButton;
                @SecondaryButton.started -= instance.OnSecondaryButton;
                @SecondaryButton.performed -= instance.OnSecondaryButton;
                @SecondaryButton.canceled -= instance.OnSecondaryButton;
                @Trigger.started -= instance.OnTrigger;
                @Trigger.performed -= instance.OnTrigger;
                @Trigger.canceled -= instance.OnTrigger;
                @TriggerValue.started -= instance.OnTriggerValue;
                @TriggerValue.performed -= instance.OnTriggerValue;
                @TriggerValue.canceled -= instance.OnTriggerValue;
                @Grip.started -= instance.OnGrip;
                @Grip.performed -= instance.OnGrip;
                @Grip.canceled -= instance.OnGrip;
                @GripValue.started -= instance.OnGripValue;
                @GripValue.performed -= instance.OnGripValue;
                @GripValue.canceled -= instance.OnGripValue;
                @Meun.started -= instance.OnMeun;
                @Meun.performed -= instance.OnMeun;
                @Meun.canceled -= instance.OnMeun;
                @ThumbStick.started -= instance.OnThumbStick;
                @ThumbStick.performed -= instance.OnThumbStick;
                @ThumbStick.canceled -= instance.OnThumbStick;
                @ThumbStickClick.started -= instance.OnThumbStickClick;
                @ThumbStickClick.performed -= instance.OnThumbStickClick;
                @ThumbStickClick.canceled -= instance.OnThumbStickClick;
                @ThumbStickUp.started -= instance.OnThumbStickUp;
                @ThumbStickUp.performed -= instance.OnThumbStickUp;
                @ThumbStickUp.canceled -= instance.OnThumbStickUp;
                @ThumbStickDown.started -= instance.OnThumbStickDown;
                @ThumbStickDown.performed -= instance.OnThumbStickDown;
                @ThumbStickDown.canceled -= instance.OnThumbStickDown;
                @ThumbStickLeft.started -= instance.OnThumbStickLeft;
                @ThumbStickLeft.performed -= instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled -= instance.OnThumbStickLeft;
                @ThumbStickRight.started -= instance.OnThumbStickRight;
                @ThumbStickRight.performed -= instance.OnThumbStickRight;
                @ThumbStickRight.canceled -= instance.OnThumbStickRight;
                @IndexPressed.started -= instance.OnIndexPressed;
                @IndexPressed.performed -= instance.OnIndexPressed;
                @IndexPressed.canceled -= instance.OnIndexPressed;
                @IndexPressValue.started -= instance.OnIndexPressValue;
                @IndexPressValue.performed -= instance.OnIndexPressValue;
                @IndexPressValue.canceled -= instance.OnIndexPressValue;
            }

            public void RemoveCallbacks(IYVRRightActions instance)
            {
                if (m_Wrapper.m_YVRRightActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVRRightActions instance)
            {
                foreach (var item in m_Wrapper.m_YVRRightActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVRRightActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVRRightActions @YVRRight => new YVRRightActions(this);

        // YVR Right Interaction
        private readonly InputActionMap m_YVRRightInteraction;
        private List<IYVRRightInteractionActions> m_YVRRightInteractionActionsCallbackInterfaces = new List<IYVRRightInteractionActions>();
        private readonly InputAction m_YVRRightInteraction_Select;
        private readonly InputAction m_YVRRightInteraction_SelectValue;
        private readonly InputAction m_YVRRightInteraction_Activate;
        private readonly InputAction m_YVRRightInteraction_ActivateValue;
        private readonly InputAction m_YVRRightInteraction_UIPress;
        private readonly InputAction m_YVRRightInteraction_UIPressValue;
        private readonly InputAction m_YVRRightInteraction_UIScroll;
        private readonly InputAction m_YVRRightInteraction_TranslateManipulation;
        private readonly InputAction m_YVRRightInteraction_RotateManipulation;
        private readonly InputAction m_YVRRightInteraction_DirectionalManipulation;
        private readonly InputAction m_YVRRightInteraction_ScaleToggle;
        private readonly InputAction m_YVRRightInteraction_ScaleOverTime;
        public struct YVRRightInteractionActions
        {
            private @YVRInputActions m_Wrapper;
            public YVRRightInteractionActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Select => m_Wrapper.m_YVRRightInteraction_Select;
            public InputAction @SelectValue => m_Wrapper.m_YVRRightInteraction_SelectValue;
            public InputAction @Activate => m_Wrapper.m_YVRRightInteraction_Activate;
            public InputAction @ActivateValue => m_Wrapper.m_YVRRightInteraction_ActivateValue;
            public InputAction @UIPress => m_Wrapper.m_YVRRightInteraction_UIPress;
            public InputAction @UIPressValue => m_Wrapper.m_YVRRightInteraction_UIPressValue;
            public InputAction @UIScroll => m_Wrapper.m_YVRRightInteraction_UIScroll;
            public InputAction @TranslateManipulation => m_Wrapper.m_YVRRightInteraction_TranslateManipulation;
            public InputAction @RotateManipulation => m_Wrapper.m_YVRRightInteraction_RotateManipulation;
            public InputAction @DirectionalManipulation => m_Wrapper.m_YVRRightInteraction_DirectionalManipulation;
            public InputAction @ScaleToggle => m_Wrapper.m_YVRRightInteraction_ScaleToggle;
            public InputAction @ScaleOverTime => m_Wrapper.m_YVRRightInteraction_ScaleOverTime;
            public InputActionMap Get() { return m_Wrapper.m_YVRRightInteraction; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVRRightInteractionActions set) { return set.Get(); }
            public void AddCallbacks(IYVRRightInteractionActions instance)
            {
                if (instance == null || m_Wrapper.m_YVRRightInteractionActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVRRightInteractionActionsCallbackInterfaces.Add(instance);
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @SelectValue.started += instance.OnSelectValue;
                @SelectValue.performed += instance.OnSelectValue;
                @SelectValue.canceled += instance.OnSelectValue;
                @Activate.started += instance.OnActivate;
                @Activate.performed += instance.OnActivate;
                @Activate.canceled += instance.OnActivate;
                @ActivateValue.started += instance.OnActivateValue;
                @ActivateValue.performed += instance.OnActivateValue;
                @ActivateValue.canceled += instance.OnActivateValue;
                @UIPress.started += instance.OnUIPress;
                @UIPress.performed += instance.OnUIPress;
                @UIPress.canceled += instance.OnUIPress;
                @UIPressValue.started += instance.OnUIPressValue;
                @UIPressValue.performed += instance.OnUIPressValue;
                @UIPressValue.canceled += instance.OnUIPressValue;
                @UIScroll.started += instance.OnUIScroll;
                @UIScroll.performed += instance.OnUIScroll;
                @UIScroll.canceled += instance.OnUIScroll;
                @TranslateManipulation.started += instance.OnTranslateManipulation;
                @TranslateManipulation.performed += instance.OnTranslateManipulation;
                @TranslateManipulation.canceled += instance.OnTranslateManipulation;
                @RotateManipulation.started += instance.OnRotateManipulation;
                @RotateManipulation.performed += instance.OnRotateManipulation;
                @RotateManipulation.canceled += instance.OnRotateManipulation;
                @DirectionalManipulation.started += instance.OnDirectionalManipulation;
                @DirectionalManipulation.performed += instance.OnDirectionalManipulation;
                @DirectionalManipulation.canceled += instance.OnDirectionalManipulation;
                @ScaleToggle.started += instance.OnScaleToggle;
                @ScaleToggle.performed += instance.OnScaleToggle;
                @ScaleToggle.canceled += instance.OnScaleToggle;
                @ScaleOverTime.started += instance.OnScaleOverTime;
                @ScaleOverTime.performed += instance.OnScaleOverTime;
                @ScaleOverTime.canceled += instance.OnScaleOverTime;
            }

            private void UnregisterCallbacks(IYVRRightInteractionActions instance)
            {
                @Select.started -= instance.OnSelect;
                @Select.performed -= instance.OnSelect;
                @Select.canceled -= instance.OnSelect;
                @SelectValue.started -= instance.OnSelectValue;
                @SelectValue.performed -= instance.OnSelectValue;
                @SelectValue.canceled -= instance.OnSelectValue;
                @Activate.started -= instance.OnActivate;
                @Activate.performed -= instance.OnActivate;
                @Activate.canceled -= instance.OnActivate;
                @ActivateValue.started -= instance.OnActivateValue;
                @ActivateValue.performed -= instance.OnActivateValue;
                @ActivateValue.canceled -= instance.OnActivateValue;
                @UIPress.started -= instance.OnUIPress;
                @UIPress.performed -= instance.OnUIPress;
                @UIPress.canceled -= instance.OnUIPress;
                @UIPressValue.started -= instance.OnUIPressValue;
                @UIPressValue.performed -= instance.OnUIPressValue;
                @UIPressValue.canceled -= instance.OnUIPressValue;
                @UIScroll.started -= instance.OnUIScroll;
                @UIScroll.performed -= instance.OnUIScroll;
                @UIScroll.canceled -= instance.OnUIScroll;
                @TranslateManipulation.started -= instance.OnTranslateManipulation;
                @TranslateManipulation.performed -= instance.OnTranslateManipulation;
                @TranslateManipulation.canceled -= instance.OnTranslateManipulation;
                @RotateManipulation.started -= instance.OnRotateManipulation;
                @RotateManipulation.performed -= instance.OnRotateManipulation;
                @RotateManipulation.canceled -= instance.OnRotateManipulation;
                @DirectionalManipulation.started -= instance.OnDirectionalManipulation;
                @DirectionalManipulation.performed -= instance.OnDirectionalManipulation;
                @DirectionalManipulation.canceled -= instance.OnDirectionalManipulation;
                @ScaleToggle.started -= instance.OnScaleToggle;
                @ScaleToggle.performed -= instance.OnScaleToggle;
                @ScaleToggle.canceled -= instance.OnScaleToggle;
                @ScaleOverTime.started -= instance.OnScaleOverTime;
                @ScaleOverTime.performed -= instance.OnScaleOverTime;
                @ScaleOverTime.canceled -= instance.OnScaleOverTime;
            }

            public void RemoveCallbacks(IYVRRightInteractionActions instance)
            {
                if (m_Wrapper.m_YVRRightInteractionActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVRRightInteractionActions instance)
            {
                foreach (var item in m_Wrapper.m_YVRRightInteractionActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVRRightInteractionActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVRRightInteractionActions @YVRRightInteraction => new YVRRightInteractionActions(this);

        // YVR Eye
        private readonly InputActionMap m_YVREye;
        private List<IYVREyeActions> m_YVREyeActionsCallbackInterfaces = new List<IYVREyeActions>();
        private readonly InputAction m_YVREye_devicePosition;
        private readonly InputAction m_YVREye_deviceRotation;
        private readonly InputAction m_YVREye_isTracked;
        private readonly InputAction m_YVREye_EyePress;
        public struct YVREyeActions
        {
            private @YVRInputActions m_Wrapper;
            public YVREyeActions(@YVRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @devicePosition => m_Wrapper.m_YVREye_devicePosition;
            public InputAction @deviceRotation => m_Wrapper.m_YVREye_deviceRotation;
            public InputAction @isTracked => m_Wrapper.m_YVREye_isTracked;
            public InputAction @EyePress => m_Wrapper.m_YVREye_EyePress;
            public InputActionMap Get() { return m_Wrapper.m_YVREye; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(YVREyeActions set) { return set.Get(); }
            public void AddCallbacks(IYVREyeActions instance)
            {
                if (instance == null || m_Wrapper.m_YVREyeActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_YVREyeActionsCallbackInterfaces.Add(instance);
                @devicePosition.started += instance.OnDevicePosition;
                @devicePosition.performed += instance.OnDevicePosition;
                @devicePosition.canceled += instance.OnDevicePosition;
                @deviceRotation.started += instance.OnDeviceRotation;
                @deviceRotation.performed += instance.OnDeviceRotation;
                @deviceRotation.canceled += instance.OnDeviceRotation;
                @isTracked.started += instance.OnIsTracked;
                @isTracked.performed += instance.OnIsTracked;
                @isTracked.canceled += instance.OnIsTracked;
                @EyePress.started += instance.OnEyePress;
                @EyePress.performed += instance.OnEyePress;
                @EyePress.canceled += instance.OnEyePress;
            }

            private void UnregisterCallbacks(IYVREyeActions instance)
            {
                @devicePosition.started -= instance.OnDevicePosition;
                @devicePosition.performed -= instance.OnDevicePosition;
                @devicePosition.canceled -= instance.OnDevicePosition;
                @deviceRotation.started -= instance.OnDeviceRotation;
                @deviceRotation.performed -= instance.OnDeviceRotation;
                @deviceRotation.canceled -= instance.OnDeviceRotation;
                @isTracked.started -= instance.OnIsTracked;
                @isTracked.performed -= instance.OnIsTracked;
                @isTracked.canceled -= instance.OnIsTracked;
                @EyePress.started -= instance.OnEyePress;
                @EyePress.performed -= instance.OnEyePress;
                @EyePress.canceled -= instance.OnEyePress;
            }

            public void RemoveCallbacks(IYVREyeActions instance)
            {
                if (m_Wrapper.m_YVREyeActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IYVREyeActions instance)
            {
                foreach (var item in m_Wrapper.m_YVREyeActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_YVREyeActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public YVREyeActions @YVREye => new YVREyeActions(this);
        private int m_ControllerSchemeIndex = -1;
        public InputControlScheme ControllerScheme
        {
            get
            {
                if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
                return asset.controlSchemes[m_ControllerSchemeIndex];
            }
        }
        private int m_HandTrackingSchemeIndex = -1;
        public InputControlScheme HandTrackingScheme
        {
            get
            {
                if (m_HandTrackingSchemeIndex == -1) m_HandTrackingSchemeIndex = asset.FindControlSchemeIndex("HandTracking");
                return asset.controlSchemes[m_HandTrackingSchemeIndex];
            }
        }
        public interface IYVRHeadActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
            void OnEyeGazePosition(InputAction.CallbackContext context);
            void OnEyeGazeRotation(InputAction.CallbackContext context);
            void OnEyeGazeIsTracked(InputAction.CallbackContext context);
            void OnEyeGazeTrackingState(InputAction.CallbackContext context);
        }
        public interface IYVRLeftActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
            void OnHapticDevice(InputAction.CallbackContext context);
            void OnAimPosition(InputAction.CallbackContext context);
            void OnAimRotation(InputAction.CallbackContext context);
            void OnAimFlags(InputAction.CallbackContext context);
            void OnPinchPosition(InputAction.CallbackContext context);
            void OnPokePosition(InputAction.CallbackContext context);
            void OnPokeRotation(InputAction.CallbackContext context);
            void OnGripPosition(InputAction.CallbackContext context);
            void OnGripRotation(InputAction.CallbackContext context);
            void OnAnyClick(InputAction.CallbackContext context);
            void OnAnyTouch(InputAction.CallbackContext context);
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnTriggerValue(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnGripValue(InputAction.CallbackContext context);
            void OnMeun(InputAction.CallbackContext context);
            void OnThumbStick(InputAction.CallbackContext context);
            void OnThumbStickClick(InputAction.CallbackContext context);
            void OnThumbStickUp(InputAction.CallbackContext context);
            void OnThumbStickDown(InputAction.CallbackContext context);
            void OnThumbStickLeft(InputAction.CallbackContext context);
            void OnThumbStickRight(InputAction.CallbackContext context);
            void OnIndexPressed(InputAction.CallbackContext context);
            void OnIndexPressValue(InputAction.CallbackContext context);
        }
        public interface IYVRLeftInteractionActions
        {
            void OnSelect(InputAction.CallbackContext context);
            void OnSelectValue(InputAction.CallbackContext context);
            void OnActivate(InputAction.CallbackContext context);
            void OnActivateValue(InputAction.CallbackContext context);
            void OnUIPress(InputAction.CallbackContext context);
            void OnUIPressValue(InputAction.CallbackContext context);
            void OnUIScroll(InputAction.CallbackContext context);
            void OnTranslateManipulation(InputAction.CallbackContext context);
            void OnRotateManipulation(InputAction.CallbackContext context);
            void OnDirectionalManipulation(InputAction.CallbackContext context);
            void OnScaleToggle(InputAction.CallbackContext context);
            void OnScaleOverTime(InputAction.CallbackContext context);
        }
        public interface IYVRRightActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
            void OnHapticDevice(InputAction.CallbackContext context);
            void OnAimPosition(InputAction.CallbackContext context);
            void OnAimRotation(InputAction.CallbackContext context);
            void OnAimFlags(InputAction.CallbackContext context);
            void OnPinchPosition(InputAction.CallbackContext context);
            void OnPokePosition(InputAction.CallbackContext context);
            void OnPokeRotation(InputAction.CallbackContext context);
            void OnGripPosition(InputAction.CallbackContext context);
            void OnGripRotation(InputAction.CallbackContext context);
            void OnAnyClick(InputAction.CallbackContext context);
            void OnAnyTouch(InputAction.CallbackContext context);
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnTriggerValue(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnGripValue(InputAction.CallbackContext context);
            void OnMeun(InputAction.CallbackContext context);
            void OnThumbStick(InputAction.CallbackContext context);
            void OnThumbStickClick(InputAction.CallbackContext context);
            void OnThumbStickUp(InputAction.CallbackContext context);
            void OnThumbStickDown(InputAction.CallbackContext context);
            void OnThumbStickLeft(InputAction.CallbackContext context);
            void OnThumbStickRight(InputAction.CallbackContext context);
            void OnIndexPressed(InputAction.CallbackContext context);
            void OnIndexPressValue(InputAction.CallbackContext context);
        }
        public interface IYVRRightInteractionActions
        {
            void OnSelect(InputAction.CallbackContext context);
            void OnSelectValue(InputAction.CallbackContext context);
            void OnActivate(InputAction.CallbackContext context);
            void OnActivateValue(InputAction.CallbackContext context);
            void OnUIPress(InputAction.CallbackContext context);
            void OnUIPressValue(InputAction.CallbackContext context);
            void OnUIScroll(InputAction.CallbackContext context);
            void OnTranslateManipulation(InputAction.CallbackContext context);
            void OnRotateManipulation(InputAction.CallbackContext context);
            void OnDirectionalManipulation(InputAction.CallbackContext context);
            void OnScaleToggle(InputAction.CallbackContext context);
            void OnScaleOverTime(InputAction.CallbackContext context);
        }
        public interface IYVREyeActions
        {
            void OnDevicePosition(InputAction.CallbackContext context);
            void OnDeviceRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnEyePress(InputAction.CallbackContext context);
        }
    }
}
